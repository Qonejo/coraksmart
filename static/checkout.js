// Sistema de Metro de la Ciudad de M√©xico
const METRO_LINES = {
    "linea1": {
        name: "üöá L√≠nea 1 (Rosa) - Pantitl√°n ‚Üî Observatorio",
        color: "#f472b6",
        stations: [
            "Pantitl√°n", "Zaragoza", "G√≥mez Far√≠as", "Boulevard Puerto A√©reo", "Balbuena", 
            "Moctezuma", "San L√°zaro", "Candelaria", "Merced", "Pino Su√°rez", 
            "Isabel la Cat√≥lica", "Salto del Agua", "Balderas", "Cuauht√©moc", "Insurgentes", 
            "Sevilla", "Chapultepec", "Juanacatl√°n", "Tacubaya", "Observatorio"
        ]
    },
    "linea2": {
        name: "üöá L√≠nea 2 (Azul) - Cuatro Caminos ‚Üî Tasque√±a",
        color: "#3b82f6",
        stations: [
            "Cuatro Caminos", "Panteones", "Tacuba", "Cuitl√°huac", "Popotla", 
            "Colegio Militar", "Normal", "San Cosme", "Revoluci√≥n", "Hidalgo", 
            "Bellas Artes", "Allende", "Z√≥calo/Tenochtitlan", "Pino Su√°rez", "San Antonio Abad", 
            "Chabacano", "Viaducto", "Xola", "Villa de Cort√©s", "Nativitas", 
            "Portero", "Ermita", "General Anaya", "Tasque√±a"
        ]
    },
    "linea3": {
        name: "üöá L√≠nea 3 (Verde Olivo) - Indios Verdes ‚Üî Universidad",
        color: "#84cc16",
        stations: [
            "Indios Verdes", "Deportivo 18 de Marzo", "Potrero", "La Raza", "Tlatelolco", 
            "Guerrero", "Hidalgo", "Ju√°rez", "Balderas", "Ni√±os H√©roes", 
            "Hospital General", "Centro M√©dico", "Etiop√≠a/Plaza de la Transparencia", "Eugenia", "Divisi√≥n del Norte", 
            "Zapata", "Coyoac√°n", "Viveros/Derechos Humanos", "Miguel √Ångel de Quevedo", "Copilco", "Universidad"
        ]
    },
    "linea4": {
        name: "üöá L√≠nea 4 (Aqua / Cian) - Mart√≠n Carrera ‚Üî Santa Anita",
        color: "#06b6d4",
        stations: [
            "Mart√≠n Carrera", "Talism√°n", "Bondojito", "Consulado", "Canal del Norte", 
            "Morelos", "Candelaria", "Fray Servando", "Jamaica", "Santa Anita"
        ]
    },
    "linea5": {
        name: "üöá L√≠nea 5 (Amarilla) - Pantitl√°n ‚Üî Polit√©cnico",
        color: "#eab308",
        stations: [
            "Pantitl√°n", "Hangares", "Terminal A√©rea", "Ocean√≠a", "Arag√≥n", 
            "Eduardo Molina", "Consulado", "Valle G√≥mez", "Misterios", "La Raza", 
            "Autobuses del Norte", "Instituto del Petr√≥leo", "Polit√©cnico"
        ]
    },
    "linea6": {
        name: "üöá L√≠nea 6 (Rojo Oscuro) - El Rosario ‚Üî Mart√≠n Carrera",
        color: "#dc2626",
        stations: [
            "El Rosario", "Tezoz√≥moc", "UAM-Azcapotzalco", "Ferrer√≠a/Arena Ciudad de M√©xico", "Norte 45", 
            "Vallejo", "Instituto del Petr√≥leo", "Lindavista", "Deportivo 18 de Marzo", "La Villa-Bas√≠lica", "Mart√≠n Carrera"
        ]
    },
    "linea7": {
        name: "üöá L√≠nea 7 (Naranja) - El Rosario ‚Üî Barranca del Muerto",
        color: "#ea580c",
        stations: [
            "El Rosario", "Aquiles Serd√°n", "Camarones", "Refiner√≠a", "Tacuba", 
            "San Joaqu√≠n", "Polanco", "Auditorio", "Constituyentes", "Tacubaya", 
            "San Pedro de los Pinos", "San Antonio", "Mixcoac", "Barranca del Muerto"
        ]
    },
    "linea8": {
        name: "üöá L√≠nea 8 (Verde Bandera) - Garibaldi/Lagunilla ‚Üî Constituci√≥n de 1917",
        color: "#16a34a",
        stations: [
            "Garibaldi/Lagunilla", "Bellas Artes", "San Juan de Letr√°n", "Salto del Agua", "Doctores", 
            "Obrera", "Chabacano", "La Viga", "Santa Anita", "Coyuya", 
            "Iztacalco", "Apatlaco", "Aculco", "Escuadr√≥n 201", "Atlalilco", 
            "Iztapalapa", "Cerro de la Estrella", "UAM-I", "Constituci√≥n de 1917"
        ]
    },
    "linea9": {
        name: "üöá L√≠nea 9 (Caf√©) - Pantitl√°n ‚Üî Tacubaya",
        color: "#a16207",
        stations: [
            "Pantitl√°n", "Puebla", "Ciudad Deportiva", "Vel√≥dromo", "Mixiuhca", 
            "Jamaica", "Chabacano", "L√°zaro C√°rdenas", "Centro M√©dico", "Chilpancingo", "Patriotismo", "Tacubaya"
        ]
    },
    "lineaA": {
        name: "üöá L√≠nea A (Morado) - Pantitl√°n ‚Üî La Paz",
        color: "#9333ea",
        stations: [
            "Pantitl√°n", "Agr√≠cola Oriental", "Canal de San Juan", "Tepalcates", "Guelatao", 
            "Pe√±√≥n Viejo", "Acatitla", "Santa Marta", "Los Reyes", "La Paz"
        ]
    },
    "lineaB": {
        name: "üöá L√≠nea B (Verde-Gris) - Buenavista ‚Üî Ciudad Azteca",
        color: "#059669",
        stations: [
            "Buenavista", "Guerrero", "Garibaldi", "Lagunilla", "Tepito", 
            "Morelos", "San L√°zaro", "Ricardo Flores Mag√≥n", "Romero Rubio", "Ocean√≠a", 
            "Deportivo Ocean√≠a", "Bosque de Arag√≥n", "Villa de Arag√≥n", "Nezahualc√≥yotl", "Impulsora", 
            "R√≠o de los Remedios", "M√∫zquiz", "Ciudad Azteca"
        ]
    },
    "linea12": {
        name: "üöá L√≠nea 12 (Dorada) - Mixcoac ‚Üî Tl√°huac",
        color: "#d97706",
        stations: [
            "Mixcoac", "Insurgentes Sur", "Hospital 20 de Noviembre", "Zapata", "Parque de los Venados", 
            "Eje Central", "Ermita", "Mexicaltzingo", "Atlalilco", "Culhuac√°n", 
            "San Andr√©s Tomatl√°n", "Lomas Estrella", "Calle 11", "Perif√©rico Oriente", "Tezonco", 
            "Olivos", "Nopalera", "Zapotitl√°n", "Tlaltenco", "Tl√°huac"
        ]
    }
};

let selectedLine = null;
let selectedStation = null;

// Cargar l√≠neas del metro al inicializar
document.addEventListener('DOMContentLoaded', function() {
    loadMetroLines();
    loadTimeSlots();
    setupFormValidation();
    
    // Agregar event listener para zona personalizada
    document.getElementById('custom_zone').addEventListener('input', validateCustomZone);
});

function loadMetroLines() {
    const linesContainer = document.getElementById('metro-lines');
    linesContainer.innerHTML = '';
    
    Object.keys(METRO_LINES).forEach(lineId => {
        const line = METRO_LINES[lineId];
        const lineElement = document.createElement('div');
        lineElement.className = 'metro-line';
        lineElement.style.borderLeft = `4px solid ${line.color}`;
        lineElement.innerHTML = line.name;
        lineElement.onclick = () => selectLine(lineId);
        linesContainer.appendChild(lineElement);
    });
}

function selectLine(lineId) {
    // Remover selecci√≥n anterior
    document.querySelectorAll('.metro-line').forEach(el => el.classList.remove('selected'));
    
    // Seleccionar nueva l√≠nea
    selectedLine = lineId;
    event.target.classList.add('selected');
    
    // Cargar estaciones de la l√≠nea seleccionada
    loadStations(lineId);
}

function loadStations(lineId) {
    const stationsContainer = document.getElementById('metro-stations');
    stationsContainer.innerHTML = '';
    
    const line = METRO_LINES[lineId];
    line.stations.forEach(station => {
        const stationElement = document.createElement('div');
        stationElement.className = 'station-option';
        stationElement.innerHTML = station;
        stationElement.onclick = () => selectStation(station, line.name);
        stationsContainer.appendChild(stationElement);
    });
}

function selectStation(station, lineName) {
    // Remover selecci√≥n anterior
    document.querySelectorAll('.station-option').forEach(el => el.classList.remove('selected'));
    
    // Seleccionar nueva estaci√≥n
    selectedStation = station;
    event.target.classList.add('selected');
    
    // Mostrar estaci√≥n seleccionada
    const stationText = `${station} (${lineName})`;
    document.getElementById('final-location').value = stationText;
    document.getElementById('station-name').textContent = stationText;
    document.getElementById('selected-station-display').style.display = 'block';
    
    // Validar formulario
    validateForm();
}

// Nueva funci√≥n para cambiar entre tipos de ubicaci√≥n
function toggleLocationMethod() {
    const locationType = document.querySelector('input[name="location_type"]:checked').value;
    const metroSection = document.getElementById('metro-selection');
    const customSection = document.getElementById('custom-location');
    const finalLocation = document.getElementById('final-location');
    
    if (locationType === 'metro') {
        metroSection.style.display = 'block';
        customSection.style.display = 'none';
        // Limpiar zona personalizada
        document.getElementById('custom_zone').value = '';
        // Validar si hay estaci√≥n seleccionada
        if (selectedStation) {
            validateForm();
        } else {
            finalLocation.value = '';
            validateForm();
        }
    } else {
        metroSection.style.display = 'none';
        customSection.style.display = 'block';
        // Limpiar selecci√≥n de metro
        selectedStation = null;
        finalLocation.value = '';
        document.getElementById('selected-station-display').style.display = 'none';
        validateForm();
    }
}

// Nueva funci√≥n para validar zona personalizada
function validateCustomZone() {
    const customZone = document.getElementById('custom_zone').value.trim();
    const finalLocation = document.getElementById('final-location');
    
    if (customZone) {
        finalLocation.value = customZone;
    } else {
        finalLocation.value = '';
    }
    
    validateForm();
}

function loadTimeSlots() {
    const timeSelect = document.getElementById('delivery_time');
    timeSelect.innerHTML = '<option value="">Selecciona una hora...</option>';
    
    // Horarios t√≠picos de entrega (se pueden personalizar basado en la configuraci√≥n del admin)
    const timeSlots = [
        '09:00', '09:30', '10:00', '10:30', '11:00', '11:30',
        '12:00', '12:30', '13:00', '13:30', '14:00', '14:30',
        '15:00', '15:30', '16:00', '16:30', '17:00', '17:30',
        '18:00', '18:30', '19:00', '19:30', '20:00'
    ];
    
    timeSlots.forEach(time => {
        const option = document.createElement('option');
        option.value = time;
        option.textContent = time;
        timeSelect.appendChild(option);
    });
}

function setupFormValidation() {
    const form = document.getElementById('checkout-form');
    const submitBtn = document.getElementById('submit-btn');
    const requiredFields = ['delivery_day', 'delivery_time', 'delivery_station'];
    
    // Validar cuando cambien los campos
    requiredFields.forEach(fieldName => {
        const field = document.querySelector(`[name="${fieldName}"]`);
        if (field) {
            field.addEventListener('change', validateForm);
        }
    });
    
    function validateForm() {
        let isValid = true;
        
        requiredFields.forEach(fieldName => {
            const field = document.querySelector(`[name="${fieldName}"]`);
            if (!field || !field.value.trim()) {
                isValid = false;
            }
        });
        
        submitBtn.disabled = !isValid;
        
        if (isValid) {
            submitBtn.textContent = 'üöÄ CONFIRMAR PEDIDO';
        } else {
            submitBtn.textContent = '‚ö†Ô∏è Completa todos los campos';
        }
    }
}

// Validaci√≥n en tiempo real
document.getElementById('delivery_day').addEventListener('change', function() {
    validateForm();
});

document.getElementById('delivery_time').addEventListener('change', function() {
    validateForm();
});

function validateForm() {
    const day = document.getElementById('delivery_day').value;
    const time = document.getElementById('delivery_time').value;
    const location = document.getElementById('final-location').value;
    const submitBtn = document.getElementById('submit-btn');
    
    if (day && time && location) {
        submitBtn.disabled = false;
        submitBtn.textContent = 'üöÄ CONFIRMAR PEDIDO';
        submitBtn.style.background = '#003300';
        submitBtn.style.color = '#00ff00';
    } else {
        submitBtn.disabled = true;
        submitBtn.textContent = '‚ö†Ô∏è Completa todos los campos';
        submitBtn.style.background = '#444';
        submitBtn.style.color = '#666';
    }
}
